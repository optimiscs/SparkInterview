# docker-compose.dev.yml - 职面星火多模态面试系统开发环境配置

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: interview_frontend_dev
    ports:
      - "3000:3000"  # 前端开发服务器端口
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend-cache:/app/.next
    networks:
      - interview-network
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: interview_backend_dev
    ports:
      - "8000:8000"  # FastAPI后端端口
    volumes:
      - .:/app
      - ./data:/app/data
      - ./logs:/app/logs
      - backend-cache:/app/data/cache
    networks:
      - interview-network
    depends_on:
      - redis
      - chromadb
    env_file:
      - config.env
    environment:
      PYTHONPATH: /app
      LOG_LEVEL: DEBUG
      DEBUG_MODE: true
      API_RELOAD: true
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  redis:
    image: redis:alpine
    container_name: interview_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - interview-network
    command: redis-server --appendonly yes

  chromadb:
    image: chromadb/chroma:latest
    container_name: interview_chromadb_dev
    ports:
      - "8001:8000"  # ChromaDB API端口
    volumes:
      - chromadb-data:/chroma/chroma
    networks:
      - interview-network
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]

  # 可选：用于开发时的数据库管理工具
  adminer:
    image: adminer:latest
    container_name: interview_adminer_dev
    ports:
      - "8080:8080"
    networks:
      - interview-network
    environment:
      ADMINER_DEFAULT_SERVER: redis

networks:
  interview-network:
    driver: bridge

volumes:
  redis-data:
  chromadb-data:
  frontend-cache:
  backend-cache: